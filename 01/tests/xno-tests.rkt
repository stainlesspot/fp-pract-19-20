#lang racket
(require rackunit rackunit/text-ui)

(require "../solutions/xno.rkt")

(run-tests (test-suite "winner tests"
             (check-eqv? (winner '((#f #f #f)
                                   (#f #f #f)
                                   (#f #f #f)))
                         #f)
             (check-eqv? (winner '(("X" "O" "X")
                                   ("O" "X" "O")
                                   ("X" "O" "X")))
                         "X")
             (check-eqv? (winner '(("O" "O" "O")
                                   ("X" "X" #f)
                                   (#f #f "X")))
                         "O")
             (check-eqv? (winner '(("O" #f "O")
                                   (#f "O" #f)
                                   ("X" "X" "X")))
                         "X")
             (check-eqv? (winner '(("X" "O" "O")
                                   ("O" "X" "O")
                                   ("O" "X" "X")))
                         "X")
             (check-eqv? (winner '(("X" "O" "X")
                                   ("O" "X" "O")
                                   ("O" "X" "O")))
                         "D")
             (check-eqv? (winner '(("X" "O" "X")
                                   ("O" "O" "X")
                                   ("O" "X" #f)))
                         #f))
           'verbose)

(run-tests (test-suite "coord-matrix tests"
             (check-equal? (coord-matrix 3 3)
                           '(((0 . 0) (0 . 1) (0 . 2))
                             ((1 . 0) (1 . 1) (1 . 2))
                             ((2 . 0) (2 . 1) (2 . 2))))
             (check-equal? (coord-matrix 2 4)
                           '(((0 . 0) (0 . 1) (0 . 2) (0 . 3))
                             ((1 . 0) (1 . 1) (1 . 2) (1 . 3))))
             (check-equal? (coord-matrix 4 2)
                           '(((0 . 0) (0 . 1))
                             ((1 . 0) (1 . 1))
                             ((2 . 0) (2 . 1))
                             ((3 . 0) (3 . 1))))
             (check-equal? (coord-matrix 0 0)
                           '())
             (check-equal? (coord-matrix 0 5)
                           '())
             (check-equal? (coord-matrix 5 0)
                           '()))
           'verbose)

(run-tests (test-suite "unmarked-positions tests"
             (check-equal? (unmarked-positions '((#f #f #f)
                                                 (#f #f #f)
                                                 (#f #f #f)))
                         '((0 . 0) (0 . 1) (0 . 2)
                           (1 . 0) (1 . 1) (1 . 2)
                           (2 . 0) (2 . 1) (2 . 2)))
             (check-equal? (unmarked-positions '(("X" "O" "X")
                                                 ("O" "X" "O")
                                                 ("X" "O" "X")))
                         '())
             (check-equal? (unmarked-positions '(("O" "O" "O")
                                                 ("X" "X" #f)
                                                 (#f #f "X")))
                         '((1 . 2) (2 . 0) (2 . 1)))
             (check-equal? (unmarked-positions '(("O" #f "O")
                                                 (#f "O" #f)
                                                 ("X" "X" "X")))
                         '((0 . 1) (1 . 0) (1 . 2)))
             (check-equal? (unmarked-positions '(("X" "O" "X")
                                                 ("O" "X" "O")
                                                 ("O" "X" "O")))
                         '())
             (check-equal? (unmarked-positions '(("X" "O" "X")
                                                 ("O" "O" "X")
                                                 ("O" "X" #f)))
                         '((2 . 2))))
           'verbose)


(run-tests (test-suite "worst-outcome tests"
             (check-eqv? (worst-outcome '(("X" "O" "O")
                                          ("O" "X" "X")
                                          (#f  #f  "X"))
                                        #t)
                         1)
             (check-eqv? (worst-outcome '(("X" "O" "O")
                                          ("O" "X" "X")
                                          (#f  #f  "X"))
                                        #f)
                         -1)
             (check-eqv? (worst-outcome '(("X" "O" "X")
                                          ("O" "X" "O")
                                          ("O" "X" "O"))
                                        #f)
                         0)
             (check-eqv? (worst-outcome '(("X" "O" "X")
                                          ("O" "X" "O")
                                          ("O" "X" "O"))
                                        #t)
                         0)
             (check-eqv? (worst-outcome '(("O" "O" "O")
                                          ("O" "X" "X")
                                          (#f  "X" "X"))
                                        #t)
                         -1)
             (check-eqv? (worst-outcome '(("O" "O" "O")
                                          ("O" "X" "X")
                                          (#f  "X" "X"))
                                        #f)
                         1)
             (check-eqv? (worst-outcome '(("O" "X" "X")
                                          ("X" "O" "O")
                                          (#f  #f  #f ))
                                        #f)
                         0)
             (check-eqv? (worst-outcome '(("X" "O" "O")
                                          ("X" "O" "X")
                                          (#f  #f  "X"))
                                        #t)
                         -1)
             )
           'verbose)

(run-tests (test-suite "play tests"
             (check-equal? (play '(("X" "O" "O")
                                   ("X" "O" "X")
                                   (#f  #f  #f ))
                                 #t)
                         '(2 . 0))
             (check-equal? (play '(("X" "O" "O")
                                   ("X" "O" "X")
                                   (#f  "X" #f ))
                                 #f)
                         '(2 . 0))
             (check-equal? (play '(("O" "O" "X")
                                   ("X" "O" "X")
                                   (#f  "X" #f ))
                                 #f)
                         '(2 . 2))
             (check-equal? (play '(("X" "O" "O")
                                   ("O" "X" "X")
                                   ("O" "X" #f ))
                                 #t)
                         '(2 . 2))
             (check-equal? (play '(("O" "O" "X")
                                   (#f  #f  "X")
                                   (#f  #f  #f ))
                                 #f)
                         '(2 . 2))
             (check-equal? (play '(("X" "O" #f )
                                   (#f  "X" #f )
                                   (#f  #f  "O"))
                                 #t)
                         '(2 . 0)))
           'verbose)
